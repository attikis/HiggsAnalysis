## TreeHelper module
# TreeAnalysis Variable, Cuts and Cut-Combination definitions
#
# This modules contains definitions for most available tree variables
# in the tree generated by running treeAnalysis_cfg.py
# The primary goal is to have a generic module which other plotting 
# scripts can load to save code-space, but also make sure that a 
# unique convection is used for variables, cuts, histogam names, 
# xLabel and yLabels.

######################################################################
# All imported modules here
######################################################################
from HiggsAnalysis.HeavyChHiggsToTauNu.tools.cutstring import * # And, Not, Or
from ROOT import TCutG

######################################################################
### Tree Variables: HIG-12-037 #HIG-11-019
######################################################################
#JetCollection   = "jets"
JetCollection   = "selJetsInclTau"
#JetCollections  = allIdentifiedJets
print "*** NOTE! The jet-collection used is: \"%s\"" % (JetCollection)

### 1) Tau-jet 
TauPt      = "tau_p4.Pt()"
TauEta     = "abs(tau_p4.Eta())"
TauIso     = "tau_id_byMediumCombinedIsolationDeltaBetaCorr" #"tau_id_byTightIsolation"
Rtau       = "tau_leadPFChargedHadrCand_p4.P() / tau_p4.P()"
TauEleDisc = "tau_id_againstElectronMVA" #"tau_id_againstElectronMedium"
TauMuDisc  = "tau_id_againstMuonTight" #"tau_id_againstMuonTight"
TauIsFake  = "TauIsFake" #True if the selected tau is fake (MC only)

### 2) Isolated e/mu veto

### 3) Jets
NJets       = "jets_p4@.size()"
JetsPt      = "Sum$(jets_p4.Pt()>=30)"
JetsEta     = "Sum$(abs(jets_p4.Eta())<=2.4)"
NFwdJets    = "Sum$(abs(jets_p4.Eta()) >= 1.5)" #TEC starts at eta>=1.0

### 4) MET
Met = "met_p4.Et()"

### 5) Btagging
Btag = "passedBTagging"

### 6) DeltaPhi(tau,MET)
DeltaPhiTauMet = "TMath::ACos(( tau_p4.X()*met_p4.px() + tau_p4.Y()*met_p4.py())/( tau_p4.Et()*met_p4.Et() ))*(180/TMath::Pi())"

### 7) mT(tau,MET) 
Mt = "TMath::Sqrt(2*tau_p4.Et()*met_p4.Et()*( 1.0 - ( tau_p4.X()*met_p4.px() + tau_p4.Y()*met_p4.py())/( tau_p4.Et()*met_p4.Et() )))"

### A) Event Shape Variables
Sphericity    = "sphericity"
Aplanarity    = "aplanarity"
Planarity     = "planarity"
Circularity   = "circularity"
AlphaT        = "alphaT"
QOne          = "QOne"
QTwo          = "QTwo"
QThree        = "QThree"
Y             = "(TMath::Sqrt(3.0)/2.0)*(QTwo-QOne)"
SphericityAlt = "1.5*(QTwo+QOne)"
AplanarityAlt = "1.5*(QOne)"
PlanarityAlt  = "1.5*(shpericity-2*aplanarity)"
vDiJetMassesNoTau    = "vDiJetMassesNoTau"
vDiJetMassesNoTauSum = "Length$(vDiJetMassesNoTau)"

### B) Leading Jets 
LdgJet             = JetCollection + "_p4[0]"
NLdgJet            = JetCollection + "_p4[1]"
NNLdgJet           = JetCollection + "_p4[2]"
Ht                 = "Sum$(" + JetCollection + "_p4.Et())"
MHT                = "MHT_p4.Et()" 
MHT_SelJets        = "MHT_SelJets_p4.Et()" 
MHT_AllJets        = "MHT_AllJets_p4.Et()"
MHT_SelJetsInclTau = "TMath::Sqrt( pow(Sum$("+JetCollection+"_p4.Px()),2) + pow(Sum$("+JetCollection+"_p4.Py()),2) )" # I think this is correct (need to double-check)

### C) DeltaPhi(jet,MHT)
DeltaPhiMHTLdgJet   = "TMath::ACos(( MHT_p4.X()*"+JetCollection+"_p4[0].px() + MHT_p4.Y()*"+JetCollection+"_p4[0].py())/( MHT_p4.Et()*"+JetCollection+"_p4[0].Et() ))*(180/TMath::Pi())"
DeltaPhiMHTNLdgJet  = "TMath::ACos(( MHT_p4.X()*"+JetCollection+"_p4[1].px() + MHT_p4.Y()*"+JetCollection+"_p4[1].py())/( MHT_p4.Et()*"+JetCollection+"_p4[1].Et() ))*(180/TMath::Pi())"
DeltaPhiMHTNNLdgJet = "TMath::ACos(( MHT_p4.X()*"+JetCollection+"_p4[2].px() + MHT_p4.Y()*"+JetCollection+"_p4[2].py())/( MHT_p4.Et()*"+JetCollection+"_p4[2].Et() ))*(180/TMath::Pi())"

### D) DeltaPhi(jet,MET)
### Using the JetCollection here make no sense as it is very likely that the angle tau-MET is the same as LdgJet-MET (tau is leading jet)
DeltaPhiMetLdgJet   = "TMath::ACos(( met_p4.px()*"+JetCollection+"_p4[0].px() + met_p4.py()*"+JetCollection+"_p4[0].py())/( met_p4.Et()*"+JetCollection+"_p4[0].Et() ))*(180/TMath::Pi())"
DeltaPhiMetNLdgJet  = "TMath::ACos(( met_p4.px()*"+JetCollection+"_p4[1].px() + met_p4.py()*"+JetCollection+"_p4[1].py())/( met_p4.Et()*"+JetCollection+"_p4[1].Et() ))*(180/TMath::Pi())"
DeltaPhiMetNNLdgJet = "TMath::ACos(( met_p4.px()*"+JetCollection+"_p4[2].px() + met_p4.py()*"+JetCollection+"_p4[2].py())/( met_p4.Et()*"+JetCollection+"_p4[2].Et() ))*(180/TMath::Pi())"
#DeltaPhiMetLdgJet   = "TMath::ACos(( met_p4.px()*jets_p4[0].px() + met_p4.py()*jets_p4[0].py())/( met_p4.Et()*jets_p4[0].Et() ))*(180/TMath::Pi())"
#DeltaPhiMetNLdgJet  = "TMath::ACos(( met_p4.px()*jets_p4[1].px() + met_p4.py()*jets_p4[1].py())/( met_p4.Et()*jets_p4[1].Et() ))*(180/TMath::Pi())"
#DeltaPhiMetNNLdgJet = "TMath::ACos(( met_p4.px()*jets_p4[2].px() + met_p4.py()*jets_p4[2].py())/( met_p4.Et()*jets_p4[2].Et() ))*(180/TMath::Pi())"

### E) Other
LdgJetNLdgJetPtSum          = JetCollection+"_p4[0].Pt() + "+JetCollection+"_p4[1].Pt()"
DeltaHtTwoLdgJets           = Ht + "-" + LdgJetNLdgJetPtSum
DeltaPtLdgJetNLdgJet        = JetCollection+"_p4[0].Pt() - "+JetCollection+"_p4[1].Pt()"
DeltaPhiMHTMet              = "TMath::ACos(( met_p4.px()*MHT_p4.px() + met_p4.py()*MHT_p4.py())/( met_p4.Et()*MHT_p4.Et() ))*(180/TMath::Pi())"
DeltaPtLdgJetNLdgJetDivMet  = "TMath::Sqrt(pow("+JetCollection+"_p4[0].px() + "+JetCollection+"_p4[1].px(),2) + pow("+JetCollection+"_p4[0].py() + "+JetCollection+"_p4[1].py(),2))/( abs(met_p4.Et()) )"
DeltaPtLdgJetNLdgJetDivMHT  = "TMath::Sqrt(pow("+JetCollection+"_p4[0].px() + "+JetCollection+"_p4[1].px(),2) + pow("+JetCollection+"_p4[0].py() + "+JetCollection+"_p4[1].py(),2))/( abs(MHT_AllJets_p4.Et()) )"

######################################################################
### Per-event cuts: HIG-12-037 #HIG-11-019
######################################################################
### 1) Tau-jet 
TauPtCut        = TauPt + ">=41"
TauEtaCut       = TauEta + "<=2.1"
TauIsoCut       = TauIso + ">= 0.5"  #">= 1.0" 
RtauCut         = Rtau + ">= 0.7" 
TauEleDiscCut   = TauEleDisc + ">=1"
TauMuDiscCut    = TauMuDisc + ">=1"
TauIsFakeCut    = TauIsFake + "==1"
TauIsNotFakeCut = TauIsFake + "==0"
TauCandCut      = And(TauPtCut, TauEtaCut, TauEleDiscCut, TauMuDiscCut)
TauIDCut        = TauIsoCut + "&&" + RtauCut

### 2) Isolated e/mu veto

### 3) Jets
NJetsCut         = NJets + ">=3"
JetsPtCut        = JetsPt + ">=3"
JetsEtaCut       = JetsEta + ">=3"
NFwdJetsCutValue = "<=1"
NFwdJetsCut      = NFwdJets + NFwdJetsCutValue

### 4) MET
MetCut = Met + ">= 60" #">=50"

### 5) Btagging
BtagCut =  Btag + ">=1.0"

### 6) DeltaPhi(tau,MET)
DeltaPhiTauMetCut = DeltaPhiTauMet + "<= 160"

### 7) mT(tau,MET)
MtCutValue = " >= 80"
MtCut = Mt + MtCutValue

### A) Event Shape Variables
SphericityCut  = Sphericity + ">= 0.9"
AplanarityCut  = Aplanarity + "<= 0.1"
PlanarityCut   = Planarity  + "<= 0.3"
CircularityCut = Circularity + ">= 0.35"
AlphaTCut      = AlphaT + ">= 0.45"
QOneCut        = QOne + ">= 0.0"
QTwoCut        = QTwo + ">= 0.0"
QThreeCut      = QThree + ">= 0.0"
YCut           = Y + ">= 0.0"
SphericityAltCut        = SphericityAlt + ">= 0.9"
AplanarityAltCut        = AplanarityAlt + "<= 0.1"
PlanarityAltCut         = PlanarityAlt + "<= 0.3" 
vDiJetMassesNoTauCut    = vDiJetMassesNoTau + " <= 400 " + " && " + vDiJetMassesNoTau + ">=40"
vDiJetMassesNoTauSumCut = vDiJetMassesNoTauSum + " >= 2"

### B) Leading Jets
LdgJetCut      = LdgJet + ".Pt()>=0.0"
NLdgJetCut     = NLdgJet + ".Pt()>=0.0"
NNLdgJetCut    = NNLdgJet + ".Pt()>=0.0"
HtCut          = Ht + ">= 150"
MHTCut         = MHT + ">=60"
MHT_SelJetsCut = MHT_SelJets + ">=60"
MHT_AllJetsCut = MHT_AllJets + ">=60"

### C) DeltaPhi(jet, MHT)
DeltaPhiMHTLdgJetCut   = DeltaPhiMHTLdgJet + ">=60"
DeltaPhiMHTNLdgJetCut  = DeltaPhiMHTNLdgJet + ">=60"
DeltaPhiMHTNNLdgJetCut = DeltaPhiMHTNNLdgJet + ">=60"

### D) DeltaPhi(jet,MET)
DeltaPhiMetLdgJetCut   = DeltaPhiMetLdgJet + ">= 60"
DeltaPhiMetNLdgJetCut  = DeltaPhiMetLdgJet + ">= 60"
DeltaPhiMetNNLdgJetCut = DeltaPhiMetLdgJet + ">= 60"

### E) Other
LdgJetNLdgJetPtSumCut          = LdgJetNLdgJetPtSum + ">=0"
DeltaHtTwoLdgJetsCut           = DeltaHtTwoLdgJets + ">=0"
DeltaPtLdgJetNLdgJetCut        = DeltaPtLdgJetNLdgJet + ">=0"
DeltaPhiMHTMetCut              = DeltaPhiMHTMet + ">=0"
DeltaPtLdgJetNLdgJetDivMetCut  = DeltaPtLdgJetNLdgJetDivMet + "<=15" # "<=1.8"
DeltaPtLdgJetNLdgJetDivMHTCut  = DeltaPtLdgJetNLdgJetDivMet + "<=15"

######################################################################
### Cut combinations: 
######################################################################
### Standard Cuts
JetSelectionCuts       = "" # this should suffice
JetSelectionSanityCuts = And(NJetsCut, JetsPtCut, JetsEtaCut, TauCandCut) #sanity check
JetSelectionMtCuts     = And(JetSelectionSanityCuts, MtCut)
MetBtagCuts            = And(JetSelectionSanityCuts, MetCut, BtagCut)
MetBtagMtCuts          = And(JetSelectionSanityCuts, MetCut, BtagCut, MtCut)
MetBtagDeltaPhiCuts    = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut)
MetBtagTauIDCuts       = And(JetSelectionSanityCuts, MetCut, BtagCut, TauIDCut)
AllSelectionCuts       = And(JetSelectionSanityCuts, MetCut, BtagCut, TauIDCut, DeltaPhiTauMetCut)

### Trial Cuts
MetBtagDeltaPhiMtCuts      = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, MtCut)
MetBtagDeltaPhiNFwdJetCuts = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, NFwdJetsCut)
MetBtagDeltaPhiSpherCuts   = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, SphericityCut)
MetBtagDeltaPhiAplanCuts   = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, AplanarityCut)
MetBtagDeltaPhiPlanCuts    = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, PlanarityCut)
MetBtagDeltaPhiCircCuts    = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, CircularityCut)
MetBtagDeltaPhiAlphaTCuts  = And(JetSelectionSanityCuts, MetCut, BtagCut, DeltaPhiTauMetCut, AlphaTCut)

### Rectangular Cuts
DeltaPhiMetLdg_DeltaPhiTauMet_RCut = TCutG("DeltaPhiMetLdg_DeltaPhiTauMet_RCut", 7)
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetVarY(DeltaPhiTauMet);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetVarX(DeltaPhiMetLdgJet);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(0, 0.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(1, 0.0, 120.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(2, 60, 120.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(3, 60.0, 180.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(4, 180.0, 180.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(5, 180.0, 180.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(6, 180.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_RCut.SetPoint(7, 0.0, 0.0);

DeltaPhiMetNLdg_DeltaPhiTauMet_RCut = TCutG("DeltaPhiMetNLdg_DeltaPhiTauMet_RCut", 7)
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetVarY(DeltaPhiTauMet);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetVarX(DeltaPhiMetNLdgJet);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(0, 0.0, 0.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(1, 0.0, 120.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(2, 60, 120.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(3, 60.0, 180.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(4, 180.0, 180.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(5, 180.0, 180.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(6, 180.0, 0.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_RCut.SetPoint(7, 0.0, 0.0);

DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut = TCutG("DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut", 7)
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetVarY(DeltaPhiTauMet);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetVarX(DeltaPhiMetNNLdgJet);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(0, 0.0, 0.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(1, 0.0, 120.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(2, 60, 120.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(3, 60.0, 180.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(4, 180.0, 180.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(5, 180.0, 180.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(6, 180.0, 0.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_RCut.SetPoint(7, 0.0, 0.0);

DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut = TCutG("DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut", 4)
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetVarX(DeltaPhiTauMet);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetVarY(DeltaPhiMetLdgJet);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(0, 120.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(1, 180.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(2, 180.0, 60.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(3, 120.0, 60.0);

DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut = TCutG("DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut", 4)
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetVarX(DeltaPhiTauMet);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetVarY(DeltaPhiMetLdgJet);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(0, 120.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(1, 180.0, 0.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(2, 180.0, 60.0);
DeltaPhiMetLdg_DeltaPhiTauMet_AntiRCut.SetPoint(3, 120.0, 60.0);

DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut = TCutG("DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut", 4)
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetVarX(DeltaPhiTauMet);
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetVarY(DeltaPhiMetNLdgJet);
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(0, 120.0, 0.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(1, 180.0, 0.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(2, 180.0, 60.0);
DeltaPhiMetNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(3, 120.0, 60.0);

DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut = TCutG("DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut", 4)
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetVarX(DeltaPhiTauMet);
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetVarY(DeltaPhiMetNNLdgJet);
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(0, 120.0, 0.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(1, 180.0, 0.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(2, 180.0, 60.0);
DeltaPhiMetNNLdg_DeltaPhiTauMet_AntiRCut.SetPoint(3, 120.0, 60.0);

######################################################################
### Function definition here
######################################################################
def GetDictionaries():
    '''
    def GetDictionaries():
    Defines the histogram names, histogram tree expressions, xLabels and yLabels. These are all mapped to a unique histogram name (hName) key.
    '''

    ### Define histogram names and expressions used for plotting (incl. binning): 
    ### For TH1: "hName": "%s >> tmpHistoName" % (var)
    ### For TH2: "hName": "%s:%s >> tmpHistoName" % (varY, varX)
    histoDict = {
        #"DeltaPtLdgJetNLdgJetDivMet": "%s >> DeltaPtLdgJetNLdgJetDivMet(20, 0.0, 10.0)" % (DeltaPtLdgJetNLdgJetDivMet),
        #"DeltaPtLdgJetNLdgJetDivMHT": "%s >> DeltaPtLdgJetNLdgJetDivMHT(20, 0.0, 10.0)" % (DeltaPtLdgJetNLdgJetDivMHT),
        #"MHTMinusMet": "%s >> MHTMinusMet(24, 0.0, 600.0)" % (MHT + "-" + Met),
        #"DeltaPhiMHTMet": "%s >> DeltaPhiMHTMet(18, -0.5, 179.5)" % (DeltaPhiMHTMet)

        #"DeltaPhiMHTLdgJet": "%s >> DeltaPhiMHTLdgJet(18, 0.0, 180.0)" % (DeltaPhiMHTLdgJet),
        #"DeltaPhiMHTNLdgJet": "%s >> DeltaPhiMHTNLdgJet(18, 0.0, 180.0)" % (DeltaPhiMHTNLdgJet),
        #"DeltaPhiMHTNNLdgJet": "%s >> DeltaPhiMHTNNLdgJet(18, 0.0, 180.0)" % (DeltaPhiMHTNNLdgJet),

        #"DeltaPhiMetLdgJet": "%s >> DeltaPhiMetLdgJet(18, 0.0, 180.0)" % (DeltaPhiMetLdgJet),
        #"DeltaPhiMetNLdgJet": "%s >> DeltaPhiMetNLdgJet(18, 0.0, 180.0)" % (DeltaPhiMetNLdgJet),
        #"DeltaPhiMetNNLdgJet": "%s >> DeltaPhiMetNNLdgJet(18, 0.0, 180.0)" % (DeltaPhiMetNNLdgJet),

        #"DeltaPhiTauMet": "%s >> DeltaPhiTauMet(18, 0.0, 180.0)" % (DeltaPhiTauMet),
        
        #"MHTSelJets_Vs_MHTAllJets": "%s:%s >> MHTSelJets_Vs_MHTSelJets" % (MHT_AllJets, MHT_SelJets),
        #"DeltaPtLdgJetNLdgJetDivMet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPtLdgJetNLdgJetDivMet_Vs_DeltaPhiTauMet" % (DeltaPtLdgJetNLdgJetDivMet, DeltaPhiTauMet),
        #"DeltaPtLdgJetNLdgJetDivMHT_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPtLdgJetNLdgJetDivMHT_Vs_DeltaPhiTauMet" % (DeltaPtLdgJetNLdgJetDivMHT, DeltaPhiTauMet),
        
        #"DeltaPhiMHTLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMHTLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMHTLdgJet, DeltaPhiTauMet),
        #"DeltaPhiMHTNLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMHTNLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMHTNLdgJet, DeltaPhiTauMet),
        #"DeltaPhiMHTNNLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMHTNNLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMHTNNLdgJet, DeltaPhiTauMet),

        #"DeltaPhiMetLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMetLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMetLdgJet, DeltaPhiTauMet),
        #"DeltaPhiMetNLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMetNLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMetNLdgJet, DeltaPhiTauMet),
        #"DeltaPhiMetNNLdgJet_Vs_DeltaPhiTauMet": "%s:%s >> DeltaPhiMetNNLdgJet_Vs_DeltaPhiTauMet" % (DeltaPhiMetNNLdgJet, DeltaPhiTauMet),
        
        #"Ht": "%s >> HT(50, 0.0, 1000.0)" % (Ht),
        #"MHT": "%s:%s >> MHT(50, 0.0, 1000.0)" % (MHT,MHT),
        #"MHT_SelJets": "%s >> MHT_SelJet(50, 0.0, 1000.0)" % (MHT_SelJets),
        #"MHT_AllJets": "%s >> MHT_AllJets(50, 0.0, 1000.0)" % (MHT_AllJets),
        #"MHT_SelJetsInclTau": "%s >> MHT_SelJetsInclTau(50, 0.0, 1000.0)" % (MHT_SelJetsInclTau),

        #"Mt_TauMet": "%s >> Mt_TauMet(30, 0.0, 600.0)" % (Mt),
        
        "NFwdJets": "%s >> NFwdJets(10, -0.5, 9.5)" % (NFwdJets),
        "Sphericity": "%s >> Sphericity(10, 0.05, 1.05)" % (Sphericity),
        "Aplanarity": "%s >> Aplanarity(10, 0.0, 0.5)" % (Aplanarity),
        "Planarity": "%s >> Planarity(10, 0.0, 0.5)" % (Planarity),
        "Circularity": "%s >> Circularity(10, 0.05, 1.05)" % (Circularity),
        "AlphaT": "%s >> AlphaT(40, 0.0, 2.0)" % (AlphaT),
        #"vDiJetMassesNoTau": "%s >> vDiJetMassesNoTau(50, 0.0, 500.0)" % (vDiJetMassesNoTau),
        #"vDiJetMassesNoTauSum": "%s >> vDiJetMassesNoTauSum(10, 0.5, 10.5)" % (vDiJetMassesNoTauSum),

        #"Y_Vs_Sphericity": "%s:%s >> Y_Vs_Sphericity" % (Y, Sphericity),
        }
    
    ### Define histogram name, expression, and binning here: "hName": "xLabel"
    xLabelDict = {
        "DeltaPtLdgJetNLdgJetDivMet": "|(#vec{p}_{jet_{1}} - #vec{p}_{jet_{2}})_{T}|/ E_{T}^{miss}",
        "DeltaPtLdgJetNLdgJetDivMHT": "|(#vec{p}_{jet_{1}} - #vec{p}_{jet_{2}})_{T}|/ H_{T}^{miss}",
        "MHTMinusMet": "H_{T}^{miss} - E_{T}^{miss} (GeV)",
        "DeltaPhiMHTMet": "#Delta#phi(E_{T}^{miss}, H_{T}^{miss}) (#circ)",

        "DeltaPhiMHTLdgJet": "#Delta#phi(jet_{1}, H_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNLdgJet": "#Delta#phi(jet_{2}, H_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNNLdgJet": "#Delta#phi(jet_{3}, H_{T}^{miss}) (#circ)",

        "DeltaPhiMetLdgJet": "#Delta#phi(jet_{1}, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNLdgJet": "#Delta#phi(jet_{2}, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNNLdgJet": "#Delta#phi(jet_{3}, E_{T}^{miss}) (#circ)",

        "DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",

        "MHTSelJets_Vs_MHTAllJets": "H_{T}^{miss} for Sel Jets (GeV/c)",
        "DeltaPtLdgJetNLdgJetDivMet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",
        "DeltaPtLdgJetNLdgJetDivMHT_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",

        "DeltaPhiMHTLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",

        "DeltaPhiMetLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(#tau-jet, E_{T}^{miss}) (#circ)",

        "Ht": "H_{T} (GeV)",
        "MHT": "H_{T}^{miss} (GeV/c)",
        "MHT_SelJets": "H_{T}^{miss} (GeV/c)",
        "MHT_AllJets": "H_{T}^{miss} (GeV/c)",
        "MHT_SelJetsInclTau": "H_{T}^{miss} (GeV/c)",

        "Mt_TauMet": "m_{T}(#tau-jet, E_{T}^{miss} (GeV/c^{2})",
        
        "NFwdJets": "N_{jets}^{fwd}",
        "Sphericity": "Sphericity (S)",
        "Aplanarity": "Aplanarity (A)",
        "Planarity":  "Planarity (P)",
        "Circularity": "Circularity (C)",
        "AlphaT": "#alpha_{T}",
        "vDiJetMassesNoTau": "m(jet_{#alpha}, jet_{#beta}) (GeV/c^{2})",
        "vDiJetMassesNoTauSum": "N(jet_{#alpha}, jet_{#beta}) ",

        "Y_Vs_Sphericity": "Sphericity (S)",
        }
    
    ### Define histogram name, expression, and binning here: "hName": "yLabel"
    yLabelDict = {
        "DeltaPtLdgJetNLdgJetDivMet": "Events / %0.2f",
        "DeltaPtLdgJetNLdgJetDivMHT": "Events / %0.2f",
        "MHTMinusMet": "Events / %0.1f (GeV/c)",
        "DeltaPhiMHTMet": "Events / %.1f ^{#circ}",

        "DeltaPhiMHTLdgJet": "Events / %.1f ^{#circ}",
        "DeltaPhiMHTNLdgJet": "Events / %.1f ^{#circ}",
        "DeltaPhiMHTNNLdgJet": "Events / %.1f ^{#circ}",

        "DeltaPhiMetLdgJet": "Events / %.1f ^{#circ}",
        "DeltaPhiMetNLdgJet": "Events / %.1f ^{#circ}",
        "DeltaPhiMetNNLdgJet": "Events / %.1f ^{#circ}",

        "DeltaPhiTauMet": "Events / %.1f ^{#circ}",

        "MHTSelJets_Vs_MHTAllJets": "H_{T}^{miss} for All Jets (GeV/c)",
        "DeltaPtLdgJetNLdgJetDivMet_Vs_DeltaPhiTauMet": "|(#vec{p}_{jet_{1}} - #vec{p}_{jet_{2}})_{T}|/ E_{T}^{miss}",
        "DeltaPtLdgJetNLdgJetDivMHT_Vs_DeltaPhiTauMet": "|(#vec{p}_{jet_{1}} - #vec{p}_{jet_{2}})_{T}|/ H_{T}^{miss}",

        "DeltaPhiMHTLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{1}, H_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{2}, H_{T}^{miss}) (#circ)",
        "DeltaPhiMHTNNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{3}, H_{T}^{miss}) (#circ)",

        "DeltaPhiMetLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{1}, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{2}, E_{T}^{miss}) (#circ)",
        "DeltaPhiMetNNLdgJet_Vs_DeltaPhiTauMet": "#Delta#phi(jet_{3}, E_{T}^{miss}) (#circ)",

        "Ht": "Events / %0.f GeV",
        "MHT": "Events / %0.f GeV/c",
        "MHT_SelJets": "Events / %0.f GeV/c",
        "MHT_AllJets": "Events / %0.f GeV/c",
        "MHT_SelJetsInclTau": "Events / %0.f GeV/c",

        "Mt_TauMet": "Events / %0.f GeV/c^{2}",

        "NFwdJets": "Events / %0.f",
        "Sphericity": "Events / %0.2f",
        "Aplanarity": "Events / %0.2f",
        "Planarity":  "Events / %0.2f",
        "Circularity": "Events / %0.2f",
        "AlphaT": "Events / %0.2f",
        "vDiJetMassesNoTau": "Events / %0.f GeV/c^{2}",
        "vDiJetMassesNoTauSum": "Events / %0.1f ",

        "Y_Vs_Sphericity": "Y = (3/2)*(Q_{2}-Q_{1})",
        }
            
    return histoDict, xLabelDict, yLabelDict

######################################################################
def StartProgressBar(maxValue):
    ''' 
    def StartProgressBar(maxValue):
    Simple module to create and initialise a progress bar. The argument "maxvalue" refers to the 
    total number of tasks to be completed. This must be defined at the start of the progress bar.
    '''
    import progressbar

    widgets = [progressbar.FormatLabel(''), ' ', progressbar.Percentage(), ' ', progressbar.Bar('+'), ' ', progressbar.RotatingMarker()]
    pBar = progressbar.ProgressBar(widgets=widgets, maxval=maxValue)

    if pBar.start_time is None:
        pBar.start()

    return pBar

######################################################################
def printPSet(bPrintPset, folderName):
    '''
    def printPSet():
    Simple module that prints the parameters set in running the analysis
    '''
    if bPrintPset:
        from ROOT import gROOT
        gDirectory = gROOT.GetGlobal("gDirectory")
        named = gDirectory.Get("%s/parameterSet" % (folderName))
        raw_input("*** Press \"ENTER\" key to continue: ")
        print named.GetTitle()
        raw_input("*** Press \"ENTER\" key to continue: ")
    else:
        return
