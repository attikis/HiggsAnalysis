import FWCore.ParameterSet.Config as cms
Taus = cms.VPSet(
    cms.PSet(
            branchname = cms.untracked.string("Taus"),
            src = cms.InputTag("slimmedTaus"),
            discriminators = cms.vstring(
                #"againstElectronLoose",
                "againstElectronLooseMVA5",
                "againstElectronLooseMVA6",
                "againstElectronMVA5category",
                #"againstElectronMVA5raw",
                #"againstElectronMedium",
                "againstElectronMediumMVA5",
                "againstElectronMediumMVA6",
                #"againstElectronTight",
                "againstElectronTightMVA5",
                "againstElectronTightMVA6", 
                "againstElectronVLooseMVA5",
                "againstElectronVLooseMVA6",
                "againstElectronVTightMVA5",
                "againstElectronVTightMVA6",
                #"againstMuonLoose",
                #"againstMuonLoose2",
                "againstMuonLoose3",
                #"againstMuonLooseMVA",
                #"againstMuonMVAraw",
                #"againstMuonMedium",
                #"againstMuonMedium2",
                #"againstMuonMediumMVA",
                #"againstMuonTight",
                #"againstMuonTight2",
                "againstMuonTight3",
                #"againstMuonTightMVA",
                "byCombinedIsolationDeltaBetaCorrRaw3Hits",
                "byIsolationMVA3newDMwLTraw",
#                "byIsolationMVA3newDMwoLTraw", # discriminators *woLT* missing from 2015D
                "byIsolationMVA3oldDMwLTraw",
#                "byIsolationMVA3oldDMwoLTraw",
                "byLooseCombinedIsolationDeltaBetaCorr3Hits",
                "byLooseIsolationMVA3newDMwLT",
#                "byLooseIsolationMVA3newDMwoLT",
                "byLooseIsolationMVA3oldDMwLT",
#                "byLooseIsolationMVA3oldDMwoLT",
                "byMediumCombinedIsolationDeltaBetaCorr3Hits",
                "byMediumIsolationMVA3newDMwLT",
#                "byMediumIsolationMVA3newDMwoLT",
                "byMediumIsolationMVA3oldDMwLT",
#                "byMediumIsolationMVA3oldDMwoLT",
                "byTightCombinedIsolationDeltaBetaCorr3Hits",
                "byTightIsolationMVA3newDMwLT",
#                "byTightIsolationMVA3newDMwoLT",
                "byTightIsolationMVA3oldDMwLT",
#                "byTightIsolationMVA3oldDMwoLT",
                "byVLooseIsolationMVA3newDMwLT",
#                "byVLooseIsolationMVA3newDMwoLT",
                "byVLooseIsolationMVA3oldDMwLT",
#                "byVLooseIsolationMVA3oldDMwoLT",
                "byVTightIsolationMVA3newDMwLT",
#                "byVTightIsolationMVA3newDMwoLT",
                "byVTightIsolationMVA3oldDMwLT",
#                "byVTightIsolationMVA3oldDMwoLT",
                "byVVTightIsolationMVA3newDMwLT",
#                "byVVTightIsolationMVA3newDMwoLT",
                "byVVTightIsolationMVA3oldDMwLT",
#                "byVVTightIsolationMVA3oldDMwoLT",
                "chargedIsoPtSum",
                "decayModeFinding",
                "decayModeFindingNewDMs",
                "neutralIsoPtSum",
                "puCorrPtSum"
            ),
            filter = cms.untracked.bool(False), 
            jetSrc = cms.InputTag("slimmedJets"), # made from ak4PFJetsCHS
            TESvariation = cms.untracked.double(0.03),
            TESvariationExtreme = cms.untracked.double(0.10)
    )
)

